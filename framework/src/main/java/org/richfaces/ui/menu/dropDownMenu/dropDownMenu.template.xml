<?xml version="1.0" encoding="UTF-8"?>

<!--
  JBoss, Home of Professional Open Source
  Copyright 2013, Red Hat, Inc. and individual contributors
  by the @authors tag. See the copyright.txt in the distribution for a
  full listing of individual contributors.

  This is free software; you can redistribute it and/or modify it
  under the terms of the GNU Lesser General Public License as
  published by the Free Software Foundation; either version 2.1 of
  the License, or (at your option) any later version.

  This software is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this software; if not, write to the Free
  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<cdk:root xmlns="http://jboss.org/schema/richfaces/cdk/xhtml-el" xmlns:cdk="http://jboss.org/schema/richfaces/cdk/core"
          xmlns:c="http://jboss.org/schema/richfaces/cdk/jstl/core"
          xmlns:cc="http://jboss.org/schema/richfaces/cdk/jsf/composite"
        >

    <cc:interface>
        <cdk:class>org.richfaces.ui.menu.dropDownMenu.DropDownMenuRenderer</cdk:class>
        <cdk:superclass>org.richfaces.ui.menu.dropDownMenu.DropDownMenuRendererBase</cdk:superclass>
        <cdk:component-family>org.richfaces.ui.DropDownMenu</cdk:component-family>
        <cdk:renderer-type>org.richfaces.ui.DropDownMenuRenderer</cdk:renderer-type>
        <cdk:renders-children>true</cdk:renders-children>
    </cc:interface>

    <cc:implementation>
        <cdk:object name="style" value="#{component.attributes['style']}" />
        <cdk:object name="styleClass" value="#{not empty component.attributes['styleClass'] ? component.attributes['styleClass']:''}" />

        <cdk:object name="label" value="#{getLabelFacet(facesContext, component)}" type="javax.faces.component.UIComponent" />
        <cdk:object name="isDisabled" type="boolean" value="#{isDisabled(facesContext, component)}" />

        <div id="#{clientId}" class="rf-ddm-lbl #{isDisabled ? 'rf-ddm-dis' : 'rf-ddm-unsel '+styleClass} " style="#{style}"
            cdk:passThroughWithExclusions="">
            <div id="#{clientId}_label" class="#{isDisabled ? 'rf-ddm-lbl-dis' : 'rf-ddm-lbl-dec'}">

                <c:choose>
                    <c:when test="#{label != null and label.isRendered()}">
                        <cdk:call expression="label.encodeAll(facesContext)" />
                    </c:when>
                    <c:when test="#{not empty component.attributes['label']}">
                        #{component.attributes['label']}
                    </c:when>
                    <c:otherwise>

                    </c:otherwise>
                </c:choose>
            </div>

            <c:if test="#{not isDisabled(facesContext, component)}">
                <div class="rf-ddm-pos">
                    <div id="#{clientId}_list" class="rf-ddm-lst" style="display:none;min-width:#{getPopupWidth(component)}px;">
                        <div class="rf-ddm-lst-bg">
                            <cdk:call expression="renderChildren(facesContext, component)" />
                        </div>
                    </div>
                </div>

                <script type="text/javascript">
                    <cdk:scriptObject name="options">
                        <cdk:scriptOption name="direction" value="#{getDirection(component).getValue()}"
                            defaultValue="org.richfaces.ui.common.Positioning.DEFAULT.getValue()" />
                        <cdk:scriptOption name="jointPoint" value="#{getJointPoint(component).getValue()}"
                            defaultValue="org.richfaces.ui.common.Positioning.DEFAULT.getValue()" />
                        <cdk:scriptOption name="showEvent" value="#{getShowEvent(component)}" defaultValue='this.DEFAULT_SHOWEVENT' />
                        <cdk:scriptOption name="mode" value="#{getMode(component)}" defaultValue="org.richfaces.ui.common.Mode.server" />
                        <cdk:scriptOption name="horizontalOffset" value="#{component.attributes['horizontalOffset']}"
                            defaultValue='0' />
                        <cdk:scriptOption name="verticalOffset" value="#{component.attributes['verticalOffset']}"
                            defaultValue='0' />
                        <cdk:scriptOption name="hideDelay" value="#{component.attributes['hideDelay']}"
                            defaultValue='300' />
                        <cdk:scriptOption name="showDelay" value="#{component.attributes['showDelay']}"
                            defaultValue='50' />
                        <cdk:scriptOption attributes="onshow onhide ongroupshow ongrouphide onitemclick"
                            wrapper="eventHandler" />
                    </cdk:scriptObject>

                    new
                    RichFaces.ui.Menu(#{toScriptArgs(clientId,
                    options)}).initiateGroups(#{toScriptArgs(getMenuGroups(facesContext, component))});

                </script>
            </c:if>
        </div>
    </cc:implementation>

</cdk:root>
