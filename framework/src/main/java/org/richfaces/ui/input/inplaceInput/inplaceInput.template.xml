<?xml version="1.0" encoding="UTF-8"?>
<!--
  JBoss, Home of Professional Open Source
  Copyright 2013, Red Hat, Inc. and individual contributors
  by the @authors tag. See the copyright.txt in the distribution for a
  full listing of individual contributors.

  This is free software; you can redistribute it and/or modify it
  under the terms of the GNU Lesser General Public License as
  published by the Free Software Foundation; either version 2.1 of
  the License, or (at your option) any later version.

  This software is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this software; if not, write to the Free
  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->
<cdk:root xmlns="http://jboss.org/schema/richfaces/cdk/xhtml-el" xmlns:cdk="http://jboss.org/schema/richfaces/cdk/core"
          xmlns:c="http://jboss.org/schema/richfaces/cdk/jstl/core"
          xmlns:cc="http://jboss.org/schema/richfaces/cdk/jsf/composite"
        >

    <cc:interface>
        <cdk:class>org.richfaces.ui.input.inplaceInput.InplaceInputRenderer
        </cdk:class>
        <cdk:superclass>org.richfaces.ui.input.inplaceInput.InplaceInputRendererBase
        </cdk:superclass>
        <cdk:component-family>org.richfaces.ui.InplaceInput
        </cdk:component-family>
        <cdk:renderer-type>org.richfaces.ui.InplaceInputRenderer
        </cdk:renderer-type>
    </cc:interface>

    <cc:implementation>
        <cdk:object type="org.richfaces.ui.common.InplaceState" name="inplaceState" value="#{getInplaceState(component)}" />
        <cdk:object type="java.lang.String" name="inplaceValue" value="#{getValue(facesContext, component)}" />
        <cdk:object type="java.lang.String" name="defaultLabel"
            value="#{inplaceValue != null and inplaceValue.length() != 0 ? inplaceValue : '&#160;&#160;&#160;'}" />

        <span id="#{clientId}" cdk:passThroughWithExclusions="id class"
            class="#{concatClasses(getContainerStyleClasses(component), component.attributes['styleClass'])}">
            <span id="#{clientId}Label" class="rf-ii-lbl#{inplaceValue == component.attributes['defaultLabel'] ? ' rf-ii-dflt-lbl' : ''}">
                #{defaultLabel}
            </span>

            <c:if test="#{!component.attributes['disabled']}">
                <input id="#{clientId}Focus" type="image" name="#{clientId}Focus" tabindex="-1"
                    style="position: absolute; top: 0px; left: 0px; outline-style: none;" class="rf-ii-none" />
                <span id="#{clientId}Edit" class="#{getEditStyleClass(component, inplaceState)}">
                    <input id="#{clientId}Input" autocomplete="off" name="#{clientId}" type="text"
                        value="#{getInputValue(facesContext, component)}" class="rf-ii-fld" style="width: #{getInputWidth(component)};"
                        cdk:passThrough="tabindex">
                        <cdk:call expression="renderInputHandlers(facesContext, component);" />
                    </input>
                    <c:if test="#{component.attributes['showControls']}">
                        <span class="rf-ii-btn-prepos">
                            <span class="rf-ii-btn-pos">
                                <span id="#{clientId}Btnshadow" class="rf-ii-btn-shdw">
                                    <span class="rf-ii-btn-shdw-t"></span>
                                    <span class="rf-ii-btn-shdw-l"></span>
                                    <span class="rf-ii-btn-shdw-r"></span>
                                    <span class="rf-ii-btn-shdw-b"></span>

                                    <span id="#{clientId}Btn" class="rf-ii-btn-cntr">
                                        <input type="image" id="#{clientId}Okbtn" name="#{clientId}Okbtn"
                                            src="#{getResourcePath(facesContext, 'org.richfaces', 'common/inplace/ico_ok.gif')}" class="rf-ii-btn"
                                            onmousedown="this.className='rf-ii-btn-p'" onmouseout="this.className='rf-ii-btn'"
                                            onmouseup="this.className='rf-ii-btn'" tabindex="-1" />
                                        <input type="image" id="#{clientId}Cancelbtn" name="#{clientId}Cancelbtn"
                                            src="#{getResourcePath(facesContext,'org.richfaces', 'common/inplace/ico_cancel.gif')}" class="rf-ii-btn"
                                            onmousedown="this.className='rf-ii-btn-press'" onmouseout="this.className='rf-ii-btn'"
                                            onmouseup="this.className='rf-ii-btn'" tabindex="-1" />
                                    </span>
                                </span>
                            </span>
                        </span>
                    </c:if>
                </span>
                <script type="text/javascript">
                    <cdk:scriptObject name="options">
                        <cdk:scriptOption name="readyCss"
                            value="#{concatClasses('rf-ii', component.attributes['readyStateClass'])}" />
                        <cdk:scriptOption name="noneCss"
                            value="#{concatClasses('rf-ii-none', component.attributes['noneStateClass'])}" />
                        <cdk:scriptOption name="changedCss"
                            value="#{concatClasses('rf-ii-chng', component.attributes['changedClass'])}" />
                        <cdk:scriptOption name="editCss"
                            value="#{concatClasses('rf-ii-act', component.attributes['activeClass'])}" />
                        <cdk:scriptOption name="editEvent" value="#{getEditEvent(component)}" />
                        <cdk:scriptOption name="defaultLabel" value="#{defaultLabel}" />
                        <cdk:scriptOption attributes="state saveOnBlur showControls" />
                        <cdk:scriptOption attributes="onbegin oncomplete onerror onbeforedomupdate onselectitem onchange onblur onfocus"
                            wrapper="eventHandler" />
                    </cdk:scriptObject>
                    new RichFaces.ui.InplaceInput("#{clientId}", #{toScriptArgs(options)});
                </script>
            </c:if>
        </span>
    </cc:implementation>
</cdk:root>